{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../../../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.4.2 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{sync:!1};e.cancelAnimationFrame(l);var n=function(){return s(a.filter((function(e){return e.dirty&&e.active})))};if(t.sync)return n();l=e.requestAnimationFrame(n)}:function(){},c=function(e){return function(t){a.forEach((function(t){return t.dirty=e})),u(t)}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(n){e.dirty=t,e.active&&u(n)}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted || this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element ) {\n\n\t\t\tconst isSpeakerNotesWindow = this.Reveal.isSpeakerNotes();\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// In teh speaker view we only auto-play muted media\n\t\t\t\t\tif( isSpeakerNotesWindow && !el.muted ) return;\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Don't play iframe content in the speaker view since we can't\n\t\t\t// guarantee that it's muted\n\t\t\tif( !isSpeakerNotesWindow ) {\n\n\t\t\t\t// Normal iframes\n\t\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t\t} );\n\n\t\t\t\t// Lazy loading iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\t// Don't restart if media is already playing\n\t\t\tif( event.target.paused || event.target.ended ) {\n\t\t\t\tevent.target.currentTime = 0;\n\t\t\t\tevent.target.play();\n\t\t\t}\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear mumber\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// The previous background may refer to a DOM element that has\n\t\t// been removed after a presentation is synced & bgs are recreated\n\t\tif( this.previousBackground && !this.previousBackground.closest( 'body' ) ) {\n\t\t\tthis.previousBackground = null;\n\t\t}\n\n\t\tif( currentBackground && this.previousBackground ) {\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground.getAttribute( 'data-background-hash' );\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t\t\t// If multiple slides have the same background video, carry\n\t\t\t\t// the <video> element forward so that it plays continuously\n\t\t\t\t// across multiple slides\n\t\t\t\tconst currentVideo = currentBackground.querySelector( 'video' );\n\t\t\t\tconst previousVideo = this.previousBackground.querySelector( 'video' );\n\n\t\t\t\tif( currentVideo && previousVideo ) {\n\n\t\t\t\t\tconst currentVideoParent = currentVideo.parentNode;\n\t\t\t\t\tconst previousVideoParent = previousVideo.parentNode;\n\n\t\t\t\t\t// Swap the two videos\n\t\t\t\t\tpreviousVideoParent.appendChild( currentVideo );\n\t\t\t\t\tcurrentVideoParent.appendChild( previousVideo );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that;\n\t\t// 1. Both slides exist.\n\t\t// 2. Both slides are auto-animate targets with the same\n\t\t//    data-auto-animate-id value (including null if absent on both).\n\t\t// 3. data-auto-animate-restart isn't set on the physically latter\n\t\t//    slide (independent of slide direction).\n\t\tif( fromSlide && toSlide && fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR, HORIZONTAL_BACKGROUNDS_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\t\tconst horizontalBackgrounds = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_BACKGROUNDS_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v, isVertical ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif( isVertical && horizontalBackgrounds.length > h ) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle( slideBackground );\n\n\t\t\t\t\tif( pageBackground && pageBackground.background ) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t}\n\t\t\t\t\telse if( presentationBackground ) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v, true );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t\t// Ensure the last trigger extends to the end of the page, otherwise\n\t\t// rounding errors can cause the last trigger to end at 0.999999...\n\t\tthis.slideTriggers[this.slideTriggers.length - 1].range[1] = 1;\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif( changedFragments.hidden.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif( changedFragments.shown.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmentshown',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 63, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191,112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( ( keyCode === 63 || keyCode === 191 ) && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if( keyCode === 112 ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll, enterFullscreen } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n * - .enter-fullscreen\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\t\tthis.onEnterFullscreen = this.onEnterFullscreen.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\t\tthis.controlsFullscreen = queryAll( revealElement, '.enter-fullscreen' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.addEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.removeEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\tconst isVerticalStack = this.Reveal.isVerticalSlide( currentSlide );\n\t\t\tconst hasVerticalSiblings = isVerticalStack &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement.querySelectorAll( ':scope > section' ).length > 1;\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalStack && hasVerticalSiblings ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\tonEnterFullscreen( event ) {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst viewport = this.Reveal.getViewportElement();\n\n\t\tenterFullscreen( config.embedded ? viewport : viewport.parentElement );\n\n\t}\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video[controls], audio[controls]' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from \"./controllers/slidecontent.js\";\nimport SlideNumber from \"./controllers/slidenumber.js\";\nimport JumpToSlide from \"./controllers/jumptoslide.js\";\nimport Backgrounds from \"./controllers/backgrounds.js\";\nimport AutoAnimate from \"./controllers/autoanimate.js\";\nimport ScrollView from \"./controllers/scrollview.js\";\nimport PrintView from \"./controllers/printview.js\";\nimport Fragments from \"./controllers/fragments.js\";\nimport Overview from \"./controllers/overview.js\";\nimport Keyboard from \"./controllers/keyboard.js\";\nimport Location from \"./controllers/location.js\";\nimport Controls from \"./controllers/controls.js\";\nimport Progress from \"./controllers/progress.js\";\nimport Pointer from \"./controllers/pointer.js\";\nimport Plugins from \"./controllers/plugins.js\";\nimport Touch from \"./controllers/touch.js\";\nimport Focus from \"./controllers/focus.js\";\nimport Notes from \"./controllers/notes.js\";\nimport Playback from \"./components/playback.js\";\nimport defaultConfig from \"./config.js\";\nimport * as Util from \"./utils/util.js\";\nimport * as Device from \"./utils/device.js\";\nimport {\n  SLIDES_SELECTOR,\n  HORIZONTAL_SLIDES_SELECTOR,\n  VERTICAL_SLIDES_SELECTOR,\n  POST_MESSAGE_METHOD_BLACKLIST,\n} from \"./utils/constants.js\";\n\n// The reveal.js version\nexport const VERSION = \"5.1.0\";\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function (revealElement, options) {\n  // Support initialization with no args, one arg\n  // [options] or two args [revealElement, options]\n  if (arguments.length < 2) {\n    options = arguments[0];\n    revealElement = document.querySelector(\".reveal\");\n  }\n\n  const Reveal = {};\n\n  // Configuration defaults, can be overridden at initialization time\n  let config = {},\n    // Flags if initialize() has been invoked for this reveal instance\n    initialized = false,\n    // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n    ready = false,\n    // The horizontal and vertical index of the currently active slide\n    indexh,\n    indexv,\n    // The previous and current slide HTML elements\n    previousSlide,\n    currentSlide,\n    // Remember which directions that the user has navigated towards\n    navigationHistory = {\n      hasNavigatedHorizontally: false,\n      hasNavigatedVertically: false,\n    },\n    // Slides may have a data-state attribute which we pick up and apply\n    // as a class to the body. This list contains the combined state of\n    // all current slides.\n    state = [],\n    // The current scale of the presentation (see width/height config)\n    scale = 1,\n    // CSS transform that is currently applied to the slides container,\n    // split into two groups\n    slidesTransform = { layout: \"\", overview: \"\" },\n    // Cached references to DOM elements\n    dom = {},\n    // Flags if the interaction event listeners are bound\n    eventsAreBound = false,\n    // The current slide transition state; idle or running\n    transition = \"idle\",\n    // The current auto-slide duration\n    autoSlide = 0,\n    // Auto slide properties\n    autoSlidePlayer,\n    autoSlideTimeout = 0,\n    autoSlideStartTime = -1,\n    autoSlidePaused = false,\n    // Controllers for different aspects of our presentation. They're\n    // all given direct references to this Reveal instance since there\n    // may be multiple presentations running in parallel.\n    slideContent = new SlideContent(Reveal),\n    slideNumber = new SlideNumber(Reveal),\n    jumpToSlide = new JumpToSlide(Reveal),\n    autoAnimate = new AutoAnimate(Reveal),\n    backgrounds = new Backgrounds(Reveal),\n    scrollView = new ScrollView(Reveal),\n    printView = new PrintView(Reveal),\n    fragments = new Fragments(Reveal),\n    overview = new Overview(Reveal),\n    keyboard = new Keyboard(Reveal),\n    location = new Location(Reveal),\n    controls = new Controls(Reveal),\n    progress = new Progress(Reveal),\n    pointer = new Pointer(Reveal),\n    plugins = new Plugins(Reveal),\n    focus = new Focus(Reveal),\n    touch = new Touch(Reveal),\n    notes = new Notes(Reveal);\n\n  /**\n   * Starts up the presentation.\n   */\n  function initialize(initOptions) {\n    if (!revealElement)\n      throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n    if (initialized) throw \"Reveal.js has already been initialized.\";\n\n    initialized = true;\n\n    // Cache references to key DOM elements\n    dom.wrapper = revealElement;\n    dom.slides = revealElement.querySelector(\".slides\");\n\n    if (!dom.slides)\n      throw 'Unable to find slides container (<div class=\"slides\">).';\n\n    // Compose our config object in order of increasing precedence:\n    // 1. Default reveal.js options\n    // 2. Options provided via Reveal.configure() prior to\n    //    initialization\n    // 3. Options passed to the Reveal constructor\n    // 4. Options passed to Reveal.initialize\n    // 5. Query params\n    config = {\n      ...defaultConfig,\n      ...config,\n      ...options,\n      ...initOptions,\n      ...Util.getQueryHash(),\n    };\n\n    // Legacy support for the ?print-pdf query\n    if (/print-pdf/gi.test(window.location.search)) {\n      config.view = \"print\";\n    }\n\n    setViewport();\n\n    // Force a layout when the whole page, incl fonts, has loaded\n    window.addEventListener(\"load\", layout, false);\n\n    // Register plugins and load dependencies, then move on to #start()\n    plugins.load(config.plugins, config.dependencies).then(start);\n\n    return new Promise((resolve) => Reveal.on(\"ready\", resolve));\n  }\n\n  /**\n   * Encase the presentation in a reveal.js viewport. The\n   * extent of the viewport differs based on configuration.\n   */\n  function setViewport() {\n    // Embedded decks use the reveal element as their viewport\n    if (config.embedded === true) {\n      dom.viewport =\n        Util.closest(revealElement, \".reveal-viewport\") || revealElement;\n    }\n    // Full-page decks use the body as their viewport\n    else {\n      dom.viewport = document.body;\n      document.documentElement.classList.add(\"reveal-full-page\");\n    }\n\n    dom.viewport.classList.add(\"reveal-viewport\");\n  }\n\n  /**\n   * Starts up reveal.js by binding input events and navigating\n   * to the current URL deeplink if there is one.\n   */\n  function start() {\n    // Don't proceed if this instance has been destroyed\n    if (initialized === false) return;\n\n    ready = true;\n\n    // Remove slides hidden with data-visibility\n    removeHiddenSlides();\n\n    // Make sure we've got all the DOM elements we need\n    setupDOM();\n\n    // Listen to messages posted to this window\n    setupPostMessage();\n\n    // Prevent the slides from being scrolled out of view\n    setupScrollPrevention();\n\n    // Adds bindings for fullscreen mode\n    setupFullscreen();\n\n    // Resets all vertical slides so that only the first is visible\n    resetVerticalSlides();\n\n    // Updates the presentation to match the current configuration values\n    configure();\n\n    // Create slide backgrounds\n    backgrounds.update(true);\n\n    // Activate the print/scroll view if configured\n    activateInitialView();\n\n    // Read the initial hash\n    location.readURL();\n\n    // Notify listeners that the presentation is ready but use a 1ms\n    // timeout to ensure it's not fired synchronously after #initialize()\n    setTimeout(() => {\n      // Enable transitions now that we're loaded\n      dom.slides.classList.remove(\"no-transition\");\n\n      dom.wrapper.classList.add(\"ready\");\n\n      dispatchEvent({\n        type: \"ready\",\n        data: {\n          indexh,\n          indexv,\n          currentSlide,\n        },\n      });\n    }, 1);\n  }\n\n  /**\n   * Activates the correct reveal.js view based on our config.\n   * This is only invoked once during initialization.\n   */\n  function activateInitialView() {\n    const activatePrintView = config.view === \"print\";\n    const activateScrollView =\n      config.view === \"scroll\" || config.view === \"reader\";\n\n    if (activatePrintView || activateScrollView) {\n      if (activatePrintView) {\n        removeEventListeners();\n      } else {\n        touch.unbind();\n      }\n\n      // Avoid content flickering during layout\n      dom.viewport.classList.add(\"loading-scroll-mode\");\n\n      if (activatePrintView) {\n        // The document needs to have loaded for the PDF layout\n        // measurements to be accurate\n        if (document.readyState === \"complete\") {\n          printView.activate();\n        } else {\n          window.addEventListener(\"load\", () => printView.activate());\n        }\n      } else {\n        scrollView.activate();\n      }\n    }\n  }\n\n  /**\n   * Removes all slides with data-visibility=\"hidden\". This\n   * is done right before the rest of the presentation is\n   * initialized.\n   *\n   * If you want to show all hidden slides, initialize\n   * reveal.js with showHiddenSlides set to true.\n   */\n  function removeHiddenSlides() {\n    if (!config.showHiddenSlides) {\n      Util.queryAll(dom.wrapper, 'section[data-visibility=\"hidden\"]').forEach(\n        (slide) => {\n          const parent = slide.parentNode;\n\n          // If this slide is part of a stack and that stack will be\n          // empty after removing the hidden slide, remove the entire\n          // stack\n          if (\n            parent.childElementCount === 1 &&\n            /section/i.test(parent.nodeName)\n          ) {\n            parent.remove();\n          } else {\n            slide.remove();\n          }\n        },\n      );\n    }\n  }\n\n  /**\n   * Finds and stores references to DOM elements which are\n   * required by the presentation. If a required element is\n   * not found, it is created.\n   */\n  function setupDOM() {\n    // Prevent transitions while we're loading\n    dom.slides.classList.add(\"no-transition\");\n\n    if (Device.isMobile) {\n      dom.wrapper.classList.add(\"no-hover\");\n    } else {\n      dom.wrapper.classList.remove(\"no-hover\");\n    }\n\n    backgrounds.render();\n    slideNumber.render();\n    jumpToSlide.render();\n    controls.render();\n    progress.render();\n    notes.render();\n\n    // Overlay graphic which is displayed during the paused mode\n    dom.pauseOverlay = Util.createSingletonNode(\n      dom.wrapper,\n      \"div\",\n      \"pause-overlay\",\n      config.controls\n        ? '<button class=\"resume-button\">Resume presentation</button>'\n        : null,\n    );\n\n    dom.statusElement = createStatusElement();\n\n    dom.wrapper.setAttribute(\"role\", \"application\");\n  }\n\n  /**\n   * Creates a hidden div with role aria-live to announce the\n   * current slide content. Hide the div off-screen to make it\n   * available only to Assistive Technologies.\n   *\n   * @return {HTMLElement}\n   */\n  function createStatusElement() {\n    let statusElement = dom.wrapper.querySelector(\".aria-status\");\n    if (!statusElement) {\n      statusElement = document.createElement(\"div\");\n      statusElement.style.position = \"absolute\";\n      statusElement.style.height = \"1px\";\n      statusElement.style.width = \"1px\";\n      statusElement.style.overflow = \"hidden\";\n      statusElement.style.clip = \"rect( 1px, 1px, 1px, 1px )\";\n      statusElement.classList.add(\"aria-status\");\n      statusElement.setAttribute(\"aria-live\", \"polite\");\n      statusElement.setAttribute(\"aria-atomic\", \"true\");\n      dom.wrapper.appendChild(statusElement);\n    }\n    return statusElement;\n  }\n\n  /**\n   * Announces the given text to screen readers.\n   */\n  function announceStatus(value) {\n    dom.statusElement.textContent = value;\n  }\n\n  /**\n   * Converts the given HTML element into a string of text\n   * that can be announced to a screen reader. Hidden\n   * elements are excluded.\n   */\n  function getStatusText(node) {\n    let text = \"\";\n\n    // Text node\n    if (node.nodeType === 3) {\n      text += node.textContent;\n    }\n    // Element node\n    else if (node.nodeType === 1) {\n      let isAriaHidden = node.getAttribute(\"aria-hidden\");\n      let isDisplayHidden = window.getComputedStyle(node)[\"display\"] === \"none\";\n      if (isAriaHidden !== \"true\" && !isDisplayHidden) {\n        Array.from(node.childNodes).forEach((child) => {\n          text += getStatusText(child);\n        });\n      }\n    }\n\n    text = text.trim();\n\n    return text === \"\" ? \"\" : text + \" \";\n  }\n\n  /**\n   * This is an unfortunate necessity. Some actions – such as\n   * an input field being focused in an iframe or using the\n   * keyboard to expand text selection beyond the bounds of\n   * a slide – can trigger our content to be pushed out of view.\n   * This scrolling can not be prevented by hiding overflow in\n   * CSS (we already do) so we have to resort to repeatedly\n   * checking if the slides have been offset :(\n   */\n  function setupScrollPrevention() {\n    setInterval(() => {\n      if (\n        (!scrollView.isActive() && dom.wrapper.scrollTop !== 0) ||\n        dom.wrapper.scrollLeft !== 0\n      ) {\n        dom.wrapper.scrollTop = 0;\n        dom.wrapper.scrollLeft = 0;\n      }\n    }, 1000);\n  }\n\n  /**\n   * After entering fullscreen we need to force a layout to\n   * get our presentations to scale correctly. This behavior\n   * is inconsistent across browsers but a force layout seems\n   * to normalize it.\n   */\n  function setupFullscreen() {\n    document.addEventListener(\"fullscreenchange\", onFullscreenChange);\n    document.addEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n  }\n\n  /**\n   * Registers a listener to postMessage events, this makes it\n   * possible to call all reveal.js API methods from another\n   * window. For example:\n   *\n   * revealWindow.postMessage( JSON.stringify({\n   *   method: 'slide',\n   *   args: [ 2 ]\n   * }), '*' );\n   */\n  function setupPostMessage() {\n    if (config.postMessage) {\n      window.addEventListener(\"message\", onPostMessage, false);\n    }\n  }\n\n  /**\n   * Applies the configuration settings from the config\n   * object. May be called multiple times.\n   *\n   * @param {object} options\n   */\n  function configure(options) {\n    const oldConfig = { ...config };\n\n    // New config options may be passed when this method\n    // is invoked through the API after initialization\n    if (typeof options === \"object\") Util.extend(config, options);\n\n    // Abort if reveal.js hasn't finished loading, config\n    // changes will be applied automatically once ready\n    if (Reveal.isReady() === false) return;\n\n    const numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length;\n\n    // The transition is added as a class on the .reveal element\n    dom.wrapper.classList.remove(oldConfig.transition);\n    dom.wrapper.classList.add(config.transition);\n\n    dom.wrapper.setAttribute(\"data-transition-speed\", config.transitionSpeed);\n    dom.wrapper.setAttribute(\n      \"data-background-transition\",\n      config.backgroundTransition,\n    );\n\n    // Expose our configured slide dimensions as custom props\n    dom.viewport.style.setProperty(\n      \"--slide-width\",\n      typeof config.width === \"string\" ? config.width : config.width + \"px\",\n    );\n    dom.viewport.style.setProperty(\n      \"--slide-height\",\n      typeof config.height === \"string\" ? config.height : config.height + \"px\",\n    );\n\n    if (config.shuffle) {\n      shuffle();\n    }\n\n    Util.toggleClass(dom.wrapper, \"embedded\", config.embedded);\n    Util.toggleClass(dom.wrapper, \"rtl\", config.rtl);\n    Util.toggleClass(dom.wrapper, \"center\", config.center);\n\n    // Exit the paused mode if it was configured off\n    if (config.pause === false) {\n      resume();\n    }\n\n    // Iframe link previews\n    if (config.previewLinks) {\n      enablePreviewLinks();\n      disablePreviewLinks(\"[data-preview-link=false]\");\n    } else {\n      disablePreviewLinks();\n      enablePreviewLinks(\"[data-preview-link]:not([data-preview-link=false])\");\n    }\n\n    // Reset all changes made by auto-animations\n    autoAnimate.reset();\n\n    // Remove existing auto-slide controls\n    if (autoSlidePlayer) {\n      autoSlidePlayer.destroy();\n      autoSlidePlayer = null;\n    }\n\n    // Generate auto-slide controls if needed\n    if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable) {\n      autoSlidePlayer = new Playback(dom.wrapper, () => {\n        return Math.min(\n          Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0),\n          1,\n        );\n      });\n\n      autoSlidePlayer.on(\"click\", onAutoSlidePlayerClick);\n      autoSlidePaused = false;\n    }\n\n    // Add the navigation mode to the DOM so we can adjust styling\n    if (config.navigationMode !== \"default\") {\n      dom.wrapper.setAttribute(\"data-navigation-mode\", config.navigationMode);\n    } else {\n      dom.wrapper.removeAttribute(\"data-navigation-mode\");\n    }\n\n    notes.configure(config, oldConfig);\n    focus.configure(config, oldConfig);\n    pointer.configure(config, oldConfig);\n    controls.configure(config, oldConfig);\n    progress.configure(config, oldConfig);\n    keyboard.configure(config, oldConfig);\n    fragments.configure(config, oldConfig);\n    slideNumber.configure(config, oldConfig);\n\n    sync();\n  }\n\n  /**\n   * Binds all event listeners.\n   */\n  function addEventListeners() {\n    eventsAreBound = true;\n\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    if (config.touch) touch.bind();\n    if (config.keyboard) keyboard.bind();\n    if (config.progress) progress.bind();\n    if (config.respondToHashChanges) location.bind();\n    controls.bind();\n    focus.bind();\n\n    dom.slides.addEventListener(\"click\", onSlidesClicked, false);\n    dom.slides.addEventListener(\"transitionend\", onTransitionEnd, false);\n    dom.pauseOverlay.addEventListener(\"click\", resume, false);\n\n    if (config.focusBodyOnPageVisibilityChange) {\n      document.addEventListener(\n        \"visibilitychange\",\n        onPageVisibilityChange,\n        false,\n      );\n    }\n  }\n\n  /**\n   * Unbinds all event listeners.\n   */\n  function removeEventListeners() {\n    eventsAreBound = false;\n\n    touch.unbind();\n    focus.unbind();\n    keyboard.unbind();\n    controls.unbind();\n    progress.unbind();\n    location.unbind();\n\n    window.removeEventListener(\"resize\", onWindowResize, false);\n\n    dom.slides.removeEventListener(\"click\", onSlidesClicked, false);\n    dom.slides.removeEventListener(\"transitionend\", onTransitionEnd, false);\n    dom.pauseOverlay.removeEventListener(\"click\", resume, false);\n  }\n\n  /**\n   * Uninitializes reveal.js by undoing changes made to the\n   * DOM and removing all event listeners.\n   */\n  function destroy() {\n    initialized = false;\n\n    // There's nothing to destroy if this instance hasn't finished\n    // initializing\n    if (ready === false) return;\n\n    removeEventListeners();\n    cancelAutoSlide();\n    disablePreviewLinks();\n\n    // Destroy controllers\n    notes.destroy();\n    focus.destroy();\n    plugins.destroy();\n    pointer.destroy();\n    controls.destroy();\n    progress.destroy();\n    backgrounds.destroy();\n    slideNumber.destroy();\n    jumpToSlide.destroy();\n\n    // Remove event listeners\n    document.removeEventListener(\"fullscreenchange\", onFullscreenChange);\n    document.removeEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n    document.removeEventListener(\n      \"visibilitychange\",\n      onPageVisibilityChange,\n      false,\n    );\n    window.removeEventListener(\"message\", onPostMessage, false);\n    window.removeEventListener(\"load\", layout, false);\n\n    // Undo DOM changes\n    if (dom.pauseOverlay) dom.pauseOverlay.remove();\n    if (dom.statusElement) dom.statusElement.remove();\n\n    document.documentElement.classList.remove(\"reveal-full-page\");\n\n    dom.wrapper.classList.remove(\n      \"ready\",\n      \"center\",\n      \"has-horizontal-slides\",\n      \"has-vertical-slides\",\n    );\n    dom.wrapper.removeAttribute(\"data-transition-speed\");\n    dom.wrapper.removeAttribute(\"data-background-transition\");\n\n    dom.viewport.classList.remove(\"reveal-viewport\");\n    dom.viewport.style.removeProperty(\"--slide-width\");\n    dom.viewport.style.removeProperty(\"--slide-height\");\n\n    dom.slides.style.removeProperty(\"width\");\n    dom.slides.style.removeProperty(\"height\");\n    dom.slides.style.removeProperty(\"zoom\");\n    dom.slides.style.removeProperty(\"left\");\n    dom.slides.style.removeProperty(\"top\");\n    dom.slides.style.removeProperty(\"bottom\");\n    dom.slides.style.removeProperty(\"right\");\n    dom.slides.style.removeProperty(\"transform\");\n\n    Array.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(\n      (slide) => {\n        slide.style.removeProperty(\"display\");\n        slide.style.removeProperty(\"top\");\n        slide.removeAttribute(\"hidden\");\n        slide.removeAttribute(\"aria-hidden\");\n      },\n    );\n  }\n\n  /**\n   * Adds a listener to one of our custom reveal.js events,\n   * like slidechanged.\n   */\n  function on(type, listener, useCapture) {\n    revealElement.addEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Unsubscribes from a reveal.js event.\n   */\n  function off(type, listener, useCapture) {\n    revealElement.removeEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Applies CSS transforms to the slides container. The container\n   * is transformed from two separate sources: layout and the overview\n   * mode.\n   *\n   * @param {object} transforms\n   */\n  function transformSlides(transforms) {\n    // Pick up new transforms from arguments\n    if (typeof transforms.layout === \"string\")\n      slidesTransform.layout = transforms.layout;\n    if (typeof transforms.overview === \"string\")\n      slidesTransform.overview = transforms.overview;\n\n    // Apply the transforms to the slides container\n    if (slidesTransform.layout) {\n      Util.transformElement(\n        dom.slides,\n        slidesTransform.layout + \" \" + slidesTransform.overview,\n      );\n    } else {\n      Util.transformElement(dom.slides, slidesTransform.overview);\n    }\n  }\n\n  /**\n   * Dispatches an event of the specified type from the\n   * reveal DOM element.\n   */\n  function dispatchEvent({ target = dom.wrapper, type, data, bubbles = true }) {\n    let event = document.createEvent(\"HTMLEvents\", 1, 2);\n    event.initEvent(type, bubbles, true);\n    Util.extend(event, data);\n    target.dispatchEvent(event);\n\n    if (target === dom.wrapper) {\n      // If we're in an iframe, post each reveal.js event to the\n      // parent window. Used by the notes plugin\n      dispatchPostMessage(type);\n    }\n\n    return event;\n  }\n\n  /**\n   * Dispatches a slidechanged event.\n   *\n   * @param {string} origin Used to identify multiplex clients\n   */\n  function dispatchSlideChanged(origin) {\n    dispatchEvent({\n      type: \"slidechanged\",\n      data: {\n        indexh,\n        indexv,\n        previousSlide,\n        currentSlide,\n        origin,\n      },\n    });\n  }\n\n  /**\n   * Dispatched a postMessage of the given type from our window.\n   */\n  function dispatchPostMessage(type, data) {\n    if (config.postMessageEvents && window.parent !== window.self) {\n      let message = {\n        namespace: \"reveal\",\n        eventName: type,\n        state: getState(),\n      };\n\n      Util.extend(message, data);\n\n      window.parent.postMessage(JSON.stringify(message), \"*\");\n    }\n  }\n\n  /**\n   * Bind preview frame links.\n   *\n   * @param {string} [selector=a] - selector for anchors\n   */\n  function enablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.addEventListener(\"click\", onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Unbind preview frame links.\n   */\n  function disablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.removeEventListener(\"click\", onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Opens a preview window for the target URL.\n   *\n   * @param {string} url - url for preview iframe src\n   */\n  function showPreview(url) {\n    closeOverlay();\n\n    dom.overlay = document.createElement(\"div\");\n    dom.overlay.classList.add(\"overlay\");\n    dom.overlay.classList.add(\"overlay-preview\");\n    dom.wrapper.appendChild(dom.overlay);\n\n    dom.overlay.innerHTML = `<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n    dom.overlay.querySelector(\"iframe\").addEventListener(\n      \"load\",\n      (event) => {\n        dom.overlay.classList.add(\"loaded\");\n      },\n      false,\n    );\n\n    dom.overlay.querySelector(\".close\").addEventListener(\n      \"click\",\n      (event) => {\n        closeOverlay();\n        event.preventDefault();\n      },\n      false,\n    );\n\n    dom.overlay.querySelector(\".external\").addEventListener(\n      \"click\",\n      (event) => {\n        closeOverlay();\n      },\n      false,\n    );\n  }\n\n  /**\n   * Open or close help overlay window.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * help is open, false means it's closed.\n   */\n  function toggleHelp(override) {\n    if (typeof override === \"boolean\") {\n      override ? showHelp() : closeOverlay();\n    } else {\n      if (dom.overlay) {\n        closeOverlay();\n      } else {\n        showHelp();\n      }\n    }\n  }\n\n  /**\n   * Opens an overlay window with help material.\n   */\n  function showHelp() {\n    if (config.help) {\n      closeOverlay();\n\n      dom.overlay = document.createElement(\"div\");\n      dom.overlay.classList.add(\"overlay\");\n      dom.overlay.classList.add(\"overlay-help\");\n      dom.wrapper.appendChild(dom.overlay);\n\n      let html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n      let shortcuts = keyboard.getShortcuts(),\n        bindings = keyboard.getBindings();\n\n      html += \"<table><th>KEY</th><th>ACTION</th>\";\n      for (let key in shortcuts) {\n        html += `<tr><td>${key}</td><td>${shortcuts[key]}</td></tr>`;\n      }\n\n      // Add custom key bindings that have associated descriptions\n      for (let binding in bindings) {\n        if (bindings[binding].key && bindings[binding].description) {\n          html += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n        }\n      }\n\n      html += \"</table>\";\n\n      dom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n      dom.overlay.querySelector(\".close\").addEventListener(\n        \"click\",\n        (event) => {\n          closeOverlay();\n          event.preventDefault();\n        },\n        false,\n      );\n    }\n  }\n\n  /**\n   * Closes any currently open overlay.\n   */\n  function closeOverlay() {\n    if (dom.overlay) {\n      dom.overlay.parentNode.removeChild(dom.overlay);\n      dom.overlay = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Applies JavaScript-controlled layout rules to the\n   * presentation.\n   */\n  function layout() {\n    if (dom.wrapper && !printView.isActive()) {\n      const viewportWidth = dom.viewport.offsetWidth;\n      const viewportHeight = dom.viewport.offsetHeight;\n\n      if (!config.disableLayout) {\n        // On some mobile devices '100vh' is taller than the visible\n        // viewport which leads to part of the presentation being\n        // cut off. To work around this we define our own '--vh' custom\n        // property where 100x adds up to the correct height.\n        //\n        // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n        if (Device.isMobile && !config.embedded) {\n          document.documentElement.style.setProperty(\n            \"--vh\",\n            window.innerHeight * 0.01 + \"px\",\n          );\n        }\n\n        const size = scrollView.isActive()\n          ? getComputedSlideSize(viewportWidth, viewportHeight)\n          : getComputedSlideSize();\n\n        const oldScale = scale;\n\n        // Layout the contents of the slides\n        layoutSlideContents(config.width, config.height);\n\n        dom.slides.style.width = size.width + \"px\";\n        dom.slides.style.height = size.height + \"px\";\n\n        // Determine scale of content to fit within available space\n        scale = Math.min(\n          size.presentationWidth / size.width,\n          size.presentationHeight / size.height,\n        );\n\n        // Respect max/min scale settings\n        scale = Math.max(scale, config.minScale);\n        scale = Math.min(scale, config.maxScale);\n\n        // Don't apply any scaling styles if scale is 1 or we're\n        // in the scroll view\n        if (scale === 1 || scrollView.isActive()) {\n          dom.slides.style.zoom = \"\";\n          dom.slides.style.left = \"\";\n          dom.slides.style.top = \"\";\n          dom.slides.style.bottom = \"\";\n          dom.slides.style.right = \"\";\n          transformSlides({ layout: \"\" });\n        } else {\n          dom.slides.style.zoom = \"\";\n          dom.slides.style.left = \"50%\";\n          dom.slides.style.top = \"50%\";\n          dom.slides.style.bottom = \"auto\";\n          dom.slides.style.right = \"auto\";\n          transformSlides({\n            layout: \"translate(-50%, -50%) scale(\" + scale + \")\",\n          });\n        }\n\n        // Select all slides, vertical and horizontal\n        const slides = Array.from(\n          dom.wrapper.querySelectorAll(SLIDES_SELECTOR),\n        );\n\n        for (let i = 0, len = slides.length; i < len; i++) {\n          const slide = slides[i];\n\n          // Don't bother updating invisible slides\n          if (slide.style.display === \"none\") {\n            continue;\n          }\n\n          if (config.center || slide.classList.contains(\"center\")) {\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains(\"stack\")) {\n              slide.style.top = 0;\n            } else {\n              slide.style.top =\n                Math.max((size.height - slide.scrollHeight) / 2, 0) + \"px\";\n            }\n          } else {\n            slide.style.top = \"\";\n          }\n        }\n\n        if (oldScale !== scale) {\n          dispatchEvent({\n            type: \"resize\",\n            data: {\n              oldScale,\n              scale,\n              size,\n            },\n          });\n        }\n      }\n\n      checkResponsiveScrollView();\n\n      dom.viewport.style.setProperty(\"--slide-scale\", scale);\n      dom.viewport.style.setProperty(\"--viewport-width\", viewportWidth + \"px\");\n      dom.viewport.style.setProperty(\n        \"--viewport-height\",\n        viewportHeight + \"px\",\n      );\n\n      scrollView.layout();\n\n      progress.update();\n      backgrounds.updateParallax();\n\n      if (overview.isActive()) {\n        overview.update();\n      }\n    }\n  }\n\n  /**\n   * Applies layout logic to the contents of all slides in\n   * the presentation.\n   *\n   * @param {string|number} width\n   * @param {string|number} height\n   */\n  function layoutSlideContents(width, height) {\n    // Handle sizing of elements with the 'r-stretch' class\n    Util.queryAll(\n      dom.slides,\n      \"section > .stretch, section > .r-stretch\",\n    ).forEach((element) => {\n      // Determine how much vertical space we can use\n      let remainingHeight = Util.getRemainingHeight(element, height);\n\n      // Consider the aspect ratio of media elements\n      if (/(img|video)/gi.test(element.nodeName)) {\n        const nw = element.naturalWidth || element.videoWidth,\n          nh = element.naturalHeight || element.videoHeight;\n\n        const es = Math.min(width / nw, remainingHeight / nh);\n\n        element.style.width = nw * es + \"px\";\n        element.style.height = nh * es + \"px\";\n      } else {\n        element.style.width = width + \"px\";\n        element.style.height = remainingHeight + \"px\";\n      }\n    });\n  }\n\n  /**\n   * Responsively activates the scroll mode when we reach the configured\n   * activation width.\n   */\n  function checkResponsiveScrollView() {\n    // Only proceed if...\n    // 1. The DOM is ready\n    // 2. Layouts aren't disabled via config\n    // 3. We're not currently printing\n    // 4. There is a scrollActivationWidth set\n    // 5. The deck isn't configured to always use the scroll view\n    if (\n      dom.wrapper &&\n      !config.disableLayout &&\n      !printView.isActive() &&\n      typeof config.scrollActivationWidth === \"number\" &&\n      config.view !== \"scroll\"\n    ) {\n      const size = getComputedSlideSize();\n\n      if (\n        size.presentationWidth > 0 &&\n        size.presentationWidth <= config.scrollActivationWidth\n      ) {\n        if (!scrollView.isActive()) {\n          backgrounds.create();\n          scrollView.activate();\n        }\n      } else {\n        if (scrollView.isActive()) scrollView.deactivate();\n      }\n    }\n  }\n\n  /**\n   * Calculates the computed pixel size of our slides. These\n   * values are based on the width and height configuration\n   * options.\n   *\n   * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n   * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n   */\n  function getComputedSlideSize(presentationWidth, presentationHeight) {\n    let width = config.width;\n    let height = config.height;\n\n    if (config.disableLayout) {\n      width = dom.slides.offsetWidth;\n      height = dom.slides.offsetHeight;\n    }\n\n    const size = {\n      // Slide size\n      width: width,\n      height: height,\n\n      // Presentation size\n      presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n      presentationHeight: presentationHeight || dom.wrapper.offsetHeight,\n    };\n\n    // Reduce available space by margin\n    size.presentationWidth -= size.presentationWidth * config.margin;\n    size.presentationHeight -= size.presentationHeight * config.margin;\n\n    // Slide width may be a percentage of available width\n    if (typeof size.width === \"string\" && /%$/.test(size.width)) {\n      size.width = (parseInt(size.width, 10) / 100) * size.presentationWidth;\n    }\n\n    // Slide height may be a percentage of available height\n    if (typeof size.height === \"string\" && /%$/.test(size.height)) {\n      size.height = (parseInt(size.height, 10) / 100) * size.presentationHeight;\n    }\n\n    return size;\n  }\n\n  /**\n   * Stores the vertical index of a stack so that the same\n   * vertical slide can be selected when navigating to and\n   * from the stack.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   * @param {string|number} [v=0] Index to memorize\n   */\n  function setPreviousVerticalIndex(stack, v) {\n    if (typeof stack === \"object\" && typeof stack.setAttribute === \"function\") {\n      stack.setAttribute(\"data-previous-indexv\", v || 0);\n    }\n  }\n\n  /**\n   * Retrieves the vertical index which was stored using\n   * #setPreviousVerticalIndex() or 0 if no previous index\n   * exists.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   */\n  function getPreviousVerticalIndex(stack) {\n    if (\n      typeof stack === \"object\" &&\n      typeof stack.setAttribute === \"function\" &&\n      stack.classList.contains(\"stack\")\n    ) {\n      // Prefer manually defined start-indexv\n      const attributeName = stack.hasAttribute(\"data-start-indexv\")\n        ? \"data-start-indexv\"\n        : \"data-previous-indexv\";\n\n      return parseInt(stack.getAttribute(attributeName) || 0, 10);\n    }\n\n    return 0;\n  }\n\n  /**\n   * Checks if the current or specified slide is vertical\n   * (nested within another slide).\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to check\n   * orientation of\n   * @return {Boolean}\n   */\n  function isVerticalSlide(slide = currentSlide) {\n    return (\n      slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i)\n    );\n  }\n\n  /**\n   * Checks if the current or specified slide is a stack containing\n   * vertical slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide]\n   * @return {Boolean}\n   */\n  function isVerticalStack(slide = currentSlide) {\n    return (\n      slide.classList.contains(\".stack\") ||\n      slide.querySelector(\"section\") !== null\n    );\n  }\n\n  /**\n   * Returns true if we're on the last slide in the current\n   * vertical stack.\n   */\n  function isLastVerticalSlide() {\n    if (currentSlide && isVerticalSlide(currentSlide)) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns true if we're currently on the first slide in\n   * the presentation.\n   */\n  function isFirstSlide() {\n    return indexh === 0 && indexv === 0;\n  }\n\n  /**\n   * Returns true if we're currently on the last slide in\n   * the presentation. If the last slide is a stack, we only\n   * consider this the last slide if it's at the end of the\n   * stack.\n   */\n  function isLastSlide() {\n    if (currentSlide) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      // If it's vertical, does its parent have a next sibling?\n      if (\n        isVerticalSlide(currentSlide) &&\n        currentSlide.parentNode.nextElementSibling\n      )\n        return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Enters the paused mode which fades everything on screen to\n   * black.\n   */\n  function pause() {\n    if (config.pause) {\n      const wasPaused = dom.wrapper.classList.contains(\"paused\");\n\n      cancelAutoSlide();\n      dom.wrapper.classList.add(\"paused\");\n\n      if (wasPaused === false) {\n        dispatchEvent({ type: \"paused\" });\n      }\n    }\n  }\n\n  /**\n   * Exits from the paused mode.\n   */\n  function resume() {\n    const wasPaused = dom.wrapper.classList.contains(\"paused\");\n    dom.wrapper.classList.remove(\"paused\");\n\n    cueAutoSlide();\n\n    if (wasPaused) {\n      dispatchEvent({ type: \"resumed\" });\n    }\n  }\n\n  /**\n   * Toggles the paused mode on and off.\n   */\n  function togglePause(override) {\n    if (typeof override === \"boolean\") {\n      override ? pause() : resume();\n    } else {\n      isPaused() ? resume() : pause();\n    }\n  }\n\n  /**\n   * Checks if we are currently in the paused mode.\n   *\n   * @return {Boolean}\n   */\n  function isPaused() {\n    return dom.wrapper.classList.contains(\"paused\");\n  }\n\n  /**\n   * Toggles visibility of the jump-to-slide UI.\n   */\n  function toggleJumpToSlide(override) {\n    if (typeof override === \"boolean\") {\n      override ? jumpToSlide.show() : jumpToSlide.hide();\n    } else {\n      jumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n    }\n  }\n\n  /**\n   * Toggles the auto slide mode on and off.\n   *\n   * @param {Boolean} [override] Flag which sets the desired state.\n   * True means autoplay starts, false means it stops.\n   */\n\n  function toggleAutoSlide(override) {\n    if (typeof override === \"boolean\") {\n      override ? resumeAutoSlide() : pauseAutoSlide();\n    } else {\n      autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Checks if the auto slide mode is currently on.\n   *\n   * @return {Boolean}\n   */\n  function isAutoSliding() {\n    return !!(autoSlide && !autoSlidePaused);\n  }\n\n  /**\n   * Steps from the current point in the presentation to the\n   * slide which matches the specified horizontal and vertical\n   * indices.\n   *\n   * @param {number} [h=indexh] Horizontal index of the target slide\n   * @param {number} [v=indexv] Vertical index of the target slide\n   * @param {number} [f] Index of a fragment within the\n   * target slide to activate\n   * @param {number} [origin] Origin for use in multimaster environments\n   */\n  function slide(h, v, f, origin) {\n    // Dispatch an event before the slide\n    const slidechange = dispatchEvent({\n      type: \"beforeslidechange\",\n      data: {\n        indexh: h === undefined ? indexh : h,\n        indexv: v === undefined ? indexv : v,\n        origin,\n      },\n    });\n\n    // Abort if this slide change was prevented by an event listener\n    if (slidechange.defaultPrevented) return;\n\n    // Remember where we were at before\n    previousSlide = currentSlide;\n\n    // Query all horizontal slides in the deck\n    const horizontalSlides = dom.wrapper.querySelectorAll(\n      HORIZONTAL_SLIDES_SELECTOR,\n    );\n\n    // If we're in scroll mode, we scroll the target slide into view\n    // instead of running our standard slide transition\n    if (scrollView.isActive()) {\n      const scrollToSlide = scrollView.getSlideByIndices(h, v);\n      if (scrollToSlide) scrollView.scrollToSlide(scrollToSlide);\n      return;\n    }\n\n    // Abort if there are no slides\n    if (horizontalSlides.length === 0) return;\n\n    // If no vertical index is specified and the upcoming slide is a\n    // stack, resume at its previous vertical index\n    if (v === undefined && !overview.isActive()) {\n      v = getPreviousVerticalIndex(horizontalSlides[h]);\n    }\n\n    // If we were on a vertical stack, remember what vertical index\n    // it was on so we can resume at the same position when returning\n    if (\n      previousSlide &&\n      previousSlide.parentNode &&\n      previousSlide.parentNode.classList.contains(\"stack\")\n    ) {\n      setPreviousVerticalIndex(previousSlide.parentNode, indexv);\n    }\n\n    // Remember the state before this slide\n    const stateBefore = state.concat();\n\n    // Reset the state array\n    state.length = 0;\n\n    let indexhBefore = indexh || 0,\n      indexvBefore = indexv || 0;\n\n    // Activate and transition to the new slide\n    indexh = updateSlides(\n      HORIZONTAL_SLIDES_SELECTOR,\n      h === undefined ? indexh : h,\n    );\n    indexv = updateSlides(\n      VERTICAL_SLIDES_SELECTOR,\n      v === undefined ? indexv : v,\n    );\n\n    // Dispatch an event if the slide changed\n    let slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\n\n    // Ensure that the previous slide is never the same as the current\n    if (!slideChanged) previousSlide = null;\n\n    // Find the current horizontal slide and any possible vertical slides\n    // within it\n    let currentHorizontalSlide = horizontalSlides[indexh],\n      currentVerticalSlides =\n        currentHorizontalSlide.querySelectorAll(\"section\");\n\n    // Indicate when we're on a vertical slide\n    revealElement.classList.toggle(\n      \"is-vertical-slide\",\n      currentVerticalSlides.length > 1,\n    );\n\n    // Store references to the previous and current slides\n    currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide;\n\n    let autoAnimateTransition = false;\n\n    // Detect if we're moving between two auto-animated slides\n    if (slideChanged && previousSlide && currentSlide && !overview.isActive()) {\n      transition = \"running\";\n\n      autoAnimateTransition = shouldAutoAnimateBetween(\n        previousSlide,\n        currentSlide,\n        indexhBefore,\n        indexvBefore,\n      );\n\n      // If this is an auto-animated transition, we disable the\n      // regular slide transition\n      //\n      // Note 20-03-2020:\n      // This needs to happen before we update slide visibility,\n      // otherwise transitions will still run in Safari.\n      if (autoAnimateTransition) {\n        dom.slides.classList.add(\"disable-slide-transitions\");\n      }\n    }\n\n    // Update the visibility of slides now that the indices have changed\n    updateSlidesVisibility();\n\n    layout();\n\n    // Update the overview if it's currently active\n    if (overview.isActive()) {\n      overview.update();\n    }\n\n    // Show fragment, if specified\n    if (typeof f !== \"undefined\") {\n      fragments.goto(f);\n    }\n\n    // Solves an edge case where the previous slide maintains the\n    // 'present' class when navigating between adjacent vertical\n    // stacks\n    if (previousSlide && previousSlide !== currentSlide) {\n      previousSlide.classList.remove(\"present\");\n      previousSlide.setAttribute(\"aria-hidden\", \"true\");\n\n      // Reset all slides upon navigate to home\n      if (isFirstSlide()) {\n        // Launch async task\n        setTimeout(() => {\n          getVerticalStacks().forEach((slide) => {\n            setPreviousVerticalIndex(slide, 0);\n          });\n        }, 0);\n      }\n    }\n\n    // Apply the new state\n    stateLoop: for (let i = 0, len = state.length; i < len; i++) {\n      // Check if this state existed on the previous slide. If it\n      // did, we will avoid adding it repeatedly\n      for (let j = 0; j < stateBefore.length; j++) {\n        if (stateBefore[j] === state[i]) {\n          stateBefore.splice(j, 1);\n          continue stateLoop;\n        }\n      }\n\n      dom.viewport.classList.add(state[i]);\n\n      // Dispatch custom event matching the state's name\n      dispatchEvent({ type: state[i] });\n    }\n\n    // Clean up the remains of the previous state\n    while (stateBefore.length) {\n      dom.viewport.classList.remove(stateBefore.pop());\n    }\n\n    if (slideChanged) {\n      dispatchSlideChanged(origin);\n    }\n\n    // Handle embedded content\n    if (slideChanged || !previousSlide) {\n      slideContent.stopEmbeddedContent(previousSlide);\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    // Announce the current slide contents to screen readers\n    // Use animation frame to prevent getComputedStyle in getStatusText\n    // from triggering layout mid-frame\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide));\n    });\n\n    progress.update();\n    controls.update();\n    notes.update();\n    backgrounds.update();\n    backgrounds.updateParallax();\n    slideNumber.update();\n    fragments.update();\n\n    // Update the URL hash\n    location.writeURL();\n\n    cueAutoSlide();\n\n    // Auto-animation\n    if (autoAnimateTransition) {\n      setTimeout(() => {\n        dom.slides.classList.remove(\"disable-slide-transitions\");\n      }, 0);\n\n      if (config.autoAnimate) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide);\n      }\n    }\n  }\n\n  /**\n   * Checks whether or not an auto-animation should take place between\n   * the two given slides.\n   *\n   * @param {HTMLElement} fromSlide\n   * @param {HTMLElement} toSlide\n   * @param {number} indexhBefore\n   * @param {number} indexvBefore\n   *\n   * @returns {boolean}\n   */\n  function shouldAutoAnimateBetween(\n    fromSlide,\n    toSlide,\n    indexhBefore,\n    indexvBefore,\n  ) {\n    return (\n      fromSlide.hasAttribute(\"data-auto-animate\") &&\n      toSlide.hasAttribute(\"data-auto-animate\") &&\n      fromSlide.getAttribute(\"data-auto-animate-id\") ===\n        toSlide.getAttribute(\"data-auto-animate-id\") &&\n      !(\n        indexh > indexhBefore || indexv > indexvBefore ? toSlide : fromSlide\n      ).hasAttribute(\"data-auto-animate-restart\")\n    );\n  }\n\n  /**\n   * Called anytime a new slide should be activated while in the scroll\n   * view. The active slide is the page that occupies the most space in\n   * the scrollable viewport.\n   *\n   * @param {number} pageIndex\n   * @param {HTMLElement} slideElement\n   */\n  function setCurrentScrollPage(slideElement, h, v) {\n    let indexhBefore = indexh || 0;\n\n    indexh = h;\n    indexv = v;\n\n    const slideChanged = currentSlide !== slideElement;\n\n    previousSlide = currentSlide;\n    currentSlide = slideElement;\n\n    if (currentSlide && previousSlide) {\n      if (\n        config.autoAnimate &&\n        shouldAutoAnimateBetween(\n          previousSlide,\n          currentSlide,\n          indexhBefore,\n          indexv,\n        )\n      ) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide);\n      }\n    }\n\n    // Start or stop embedded content like videos and iframes\n    if (slideChanged) {\n      if (previousSlide) {\n        slideContent.stopEmbeddedContent(previousSlide);\n        slideContent.stopEmbeddedContent(previousSlide.slideBackgroundElement);\n      }\n\n      slideContent.startEmbeddedContent(currentSlide);\n      slideContent.startEmbeddedContent(currentSlide.slideBackgroundElement);\n    }\n\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide));\n    });\n\n    dispatchSlideChanged();\n  }\n\n  /**\n   * Syncs the presentation with the current DOM. Useful\n   * when new slides or control elements are added or when\n   * the configuration has changed.\n   */\n  function sync() {\n    // Subscribe to input\n    removeEventListeners();\n    addEventListeners();\n\n    // Force a layout to make sure the current config is accounted for\n    layout();\n\n    // Reflect the current autoSlide value\n    autoSlide = config.autoSlide;\n\n    // Start auto-sliding if it's enabled\n    cueAutoSlide();\n\n    // Re-create all slide backgrounds\n    backgrounds.create();\n\n    // Write the current hash to the URL\n    location.writeURL();\n\n    if (config.sortFragmentsOnSync === true) {\n      fragments.sortAll();\n    }\n\n    controls.update();\n    progress.update();\n\n    updateSlidesVisibility();\n\n    notes.update();\n    notes.updateVisibility();\n    backgrounds.update(true);\n    slideNumber.update();\n    slideContent.formatEmbeddedContent();\n\n    // Start or stop embedded content depending on global config\n    if (config.autoPlayMedia === false) {\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false });\n    } else {\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    if (overview.isActive()) {\n      overview.layout();\n    }\n  }\n\n  /**\n   * Updates reveal.js to keep in sync with new slide attributes. For\n   * example, if you add a new `data-background-image` you can call\n   * this to have reveal.js render the new background image.\n   *\n   * Similar to #sync() but more efficient when you only need to\n   * refresh a specific slide.\n   *\n   * @param {HTMLElement} slide\n   */\n  function syncSlide(slide = currentSlide) {\n    backgrounds.sync(slide);\n    fragments.sync(slide);\n\n    slideContent.load(slide);\n\n    backgrounds.update();\n    notes.update();\n  }\n\n  /**\n   * Resets all vertical slides so that only the first\n   * is visible.\n   */\n  function resetVerticalSlides() {\n    getHorizontalSlides().forEach((horizontalSlide) => {\n      Util.queryAll(horizontalSlide, \"section\").forEach((verticalSlide, y) => {\n        if (y > 0) {\n          verticalSlide.classList.remove(\"present\");\n          verticalSlide.classList.remove(\"past\");\n          verticalSlide.classList.add(\"future\");\n          verticalSlide.setAttribute(\"aria-hidden\", \"true\");\n        }\n      });\n    });\n  }\n\n  /**\n   * Randomly shuffles all slides in the deck.\n   */\n  function shuffle(slides = getHorizontalSlides()) {\n    slides.forEach((slide, i) => {\n      // Insert the slide next to a randomly picked sibling slide\n      // slide. This may cause the slide to insert before itself,\n      // but that's not an issue.\n      let beforeSlide = slides[Math.floor(Math.random() * slides.length)];\n      if (beforeSlide.parentNode === slide.parentNode) {\n        slide.parentNode.insertBefore(slide, beforeSlide);\n      }\n\n      // Randomize the order of vertical slides (if there are any)\n      let verticalSlides = slide.querySelectorAll(\"section\");\n      if (verticalSlides.length) {\n        shuffle(verticalSlides);\n      }\n    });\n  }\n\n  /**\n   * Updates one dimension of slides by showing the slide\n   * with the specified index.\n   *\n   * @param {string} selector A CSS selector that will fetch\n   * the group of slides we are working with\n   * @param {number} index The index of the slide that should be\n   * shown\n   *\n   * @return {number} The index of the slide that is now shown,\n   * might differ from the passed in index if it was out of\n   * bounds.\n   */\n  function updateSlides(selector, index) {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let slides = Util.queryAll(dom.wrapper, selector),\n      slidesLength = slides.length;\n\n    let printMode = scrollView.isActive() || printView.isActive();\n    let loopedForwards = false;\n    let loopedBackwards = false;\n\n    if (slidesLength) {\n      // Should the index loop?\n      if (config.loop) {\n        if (index >= slidesLength) loopedForwards = true;\n\n        index %= slidesLength;\n\n        if (index < 0) {\n          index = slidesLength + index;\n          loopedBackwards = true;\n        }\n      }\n\n      // Enforce max and minimum index bounds\n      index = Math.max(Math.min(index, slidesLength - 1), 0);\n\n      for (let i = 0; i < slidesLength; i++) {\n        let element = slides[i];\n\n        let reverse = config.rtl && !isVerticalSlide(element);\n\n        // Avoid .remove() with multiple args for IE11 support\n        element.classList.remove(\"past\");\n        element.classList.remove(\"present\");\n        element.classList.remove(\"future\");\n\n        // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n        element.setAttribute(\"hidden\", \"\");\n        element.setAttribute(\"aria-hidden\", \"true\");\n\n        // If this element contains vertical slides\n        if (element.querySelector(\"section\")) {\n          element.classList.add(\"stack\");\n        }\n\n        // If we're printing static slides, all slides are \"present\"\n        if (printMode) {\n          element.classList.add(\"present\");\n          continue;\n        }\n\n        if (i < index) {\n          // Any element previous to index is given the 'past' class\n          element.classList.add(reverse ? \"future\" : \"past\");\n\n          if (config.fragments) {\n            // Show all fragments in prior slides\n            showFragmentsIn(element);\n          }\n        } else if (i > index) {\n          // Any element subsequent to index is given the 'future' class\n          element.classList.add(reverse ? \"past\" : \"future\");\n\n          if (config.fragments) {\n            // Hide all fragments in future slides\n            hideFragmentsIn(element);\n          }\n        }\n        // Update the visibility of fragments when a presentation loops\n        // in either direction\n        else if (i === index && config.fragments) {\n          if (loopedForwards) {\n            hideFragmentsIn(element);\n          } else if (loopedBackwards) {\n            showFragmentsIn(element);\n          }\n        }\n      }\n\n      let slide = slides[index];\n      let wasPresent = slide.classList.contains(\"present\");\n\n      // Mark the current slide as present\n      slide.classList.add(\"present\");\n      slide.removeAttribute(\"hidden\");\n      slide.removeAttribute(\"aria-hidden\");\n\n      if (!wasPresent) {\n        // Dispatch an event indicating the slide is now visible\n        dispatchEvent({\n          target: slide,\n          type: \"visible\",\n          bubbles: false,\n        });\n      }\n\n      // If this slide has a state associated with it, add it\n      // onto the current state of the deck\n      let slideState = slide.getAttribute(\"data-state\");\n      if (slideState) {\n        state = state.concat(slideState.split(\" \"));\n      }\n    } else {\n      // Since there are no slides we can't be anywhere beyond the\n      // zeroth index\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Shows all fragment elements within the given container.\n   */\n  function showFragmentsIn(container) {\n    Util.queryAll(container, \".fragment\").forEach((fragment) => {\n      fragment.classList.add(\"visible\");\n      fragment.classList.remove(\"current-fragment\");\n    });\n  }\n\n  /**\n   * Hides all fragment elements within the given container.\n   */\n  function hideFragmentsIn(container) {\n    Util.queryAll(container, \".fragment.visible\").forEach((fragment) => {\n      fragment.classList.remove(\"visible\", \"current-fragment\");\n    });\n  }\n\n  /**\n   * Optimization method; hide all slides that are far away\n   * from the present slide.\n   */\n  function updateSlidesVisibility() {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let horizontalSlides = getHorizontalSlides(),\n      horizontalSlidesLength = horizontalSlides.length,\n      distanceX,\n      distanceY;\n\n    if (horizontalSlidesLength && typeof indexh !== \"undefined\") {\n      // The number of steps away from the present slide that will\n      // be visible\n      let viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n      // Shorten the view distance on devices that typically have\n      // less resources\n      if (Device.isMobile) {\n        viewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n      }\n\n      // All slides need to be visible when exporting to PDF\n      if (printView.isActive()) {\n        viewDistance = Number.MAX_VALUE;\n      }\n\n      for (let x = 0; x < horizontalSlidesLength; x++) {\n        let horizontalSlide = horizontalSlides[x];\n\n        let verticalSlides = Util.queryAll(horizontalSlide, \"section\"),\n          verticalSlidesLength = verticalSlides.length;\n\n        // Determine how far away this slide is from the present\n        distanceX = Math.abs((indexh || 0) - x) || 0;\n\n        // If the presentation is looped, distance should measure\n        // 1 between the first and last slides\n        if (config.loop) {\n          distanceX =\n            Math.abs(\n              ((indexh || 0) - x) % (horizontalSlidesLength - viewDistance),\n            ) || 0;\n        }\n\n        // Show the horizontal slide if it's within the view distance\n        if (distanceX < viewDistance) {\n          slideContent.load(horizontalSlide);\n        } else {\n          slideContent.unload(horizontalSlide);\n        }\n\n        if (verticalSlidesLength) {\n          let oy = getPreviousVerticalIndex(horizontalSlide);\n\n          for (let y = 0; y < verticalSlidesLength; y++) {\n            let verticalSlide = verticalSlides[y];\n\n            distanceY =\n              x === (indexh || 0)\n                ? Math.abs((indexv || 0) - y)\n                : Math.abs(y - oy);\n\n            if (distanceX + distanceY < viewDistance) {\n              slideContent.load(verticalSlide);\n            } else {\n              slideContent.unload(verticalSlide);\n            }\n          }\n        }\n      }\n\n      // Flag if there are ANY vertical slides, anywhere in the deck\n      if (hasVerticalSlides()) {\n        dom.wrapper.classList.add(\"has-vertical-slides\");\n      } else {\n        dom.wrapper.classList.remove(\"has-vertical-slides\");\n      }\n\n      // Flag if there are ANY horizontal slides, anywhere in the deck\n      if (hasHorizontalSlides()) {\n        dom.wrapper.classList.add(\"has-horizontal-slides\");\n      } else {\n        dom.wrapper.classList.remove(\"has-horizontal-slides\");\n      }\n    }\n  }\n\n  /**\n   * Determine what available routes there are for navigation.\n   *\n   * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n   */\n  function availableRoutes({ includeFragments = false } = {}) {\n    let horizontalSlides = dom.wrapper.querySelectorAll(\n        HORIZONTAL_SLIDES_SELECTOR,\n      ),\n      verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n\n    let routes = {\n      left: indexh > 0,\n      right: indexh < horizontalSlides.length - 1,\n      up: indexv > 0,\n      down: indexv < verticalSlides.length - 1,\n    };\n\n    // Looped presentations can always be navigated as long as\n    // there are slides available\n    if (config.loop) {\n      if (horizontalSlides.length > 1) {\n        routes.left = true;\n        routes.right = true;\n      }\n\n      if (verticalSlides.length > 1) {\n        routes.up = true;\n        routes.down = true;\n      }\n    }\n\n    if (horizontalSlides.length > 1 && config.navigationMode === \"linear\") {\n      routes.right = routes.right || routes.down;\n      routes.left = routes.left || routes.up;\n    }\n\n    // If includeFragments is set, a route will be considered\n    // available if either a slid OR fragment is available in\n    // the given direction\n    if (includeFragments === true) {\n      let fragmentRoutes = fragments.availableRoutes();\n      routes.left = routes.left || fragmentRoutes.prev;\n      routes.up = routes.up || fragmentRoutes.prev;\n      routes.down = routes.down || fragmentRoutes.next;\n      routes.right = routes.right || fragmentRoutes.next;\n    }\n\n    // Reverse horizontal controls for rtl\n    if (config.rtl) {\n      let left = routes.left;\n      routes.left = routes.right;\n      routes.right = left;\n    }\n\n    return routes;\n  }\n\n  /**\n   * Returns the number of past slides. This can be used as a global\n   * flattened index for slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n   *\n   * @return {number} Past slide count\n   */\n  function getSlidePastCount(slide = currentSlide) {\n    let horizontalSlides = getHorizontalSlides();\n\n    // The number of past slides\n    let pastCount = 0;\n\n    // Step through all slides and count the past ones\n    mainLoop: for (let i = 0; i < horizontalSlides.length; i++) {\n      let horizontalSlide = horizontalSlides[i];\n      let verticalSlides = horizontalSlide.querySelectorAll(\"section\");\n\n      for (let j = 0; j < verticalSlides.length; j++) {\n        // Stop as soon as we arrive at the present\n        if (verticalSlides[j] === slide) {\n          break mainLoop;\n        }\n\n        // Don't count slides with the \"uncounted\" class\n        if (verticalSlides[j].dataset.visibility !== \"uncounted\") {\n          pastCount++;\n        }\n      }\n\n      // Stop as soon as we arrive at the present\n      if (horizontalSlide === slide) {\n        break;\n      }\n\n      // Don't count the wrapping section for vertical slides and\n      // slides marked as uncounted\n      if (\n        horizontalSlide.classList.contains(\"stack\") === false &&\n        horizontalSlide.dataset.visibility !== \"uncounted\"\n      ) {\n        pastCount++;\n      }\n    }\n\n    return pastCount;\n  }\n\n  /**\n   * Returns a value ranging from 0-1 that represents\n   * how far into the presentation we have navigated.\n   *\n   * @return {number}\n   */\n  function getProgress() {\n    // The number of past and total slides\n    let totalCount = getTotalSlides();\n    let pastCount = getSlidePastCount();\n\n    if (currentSlide) {\n      let allFragments = currentSlide.querySelectorAll(\".fragment\");\n\n      // If there are fragments in the current slide those should be\n      // accounted for in the progress.\n      if (allFragments.length > 0) {\n        let visibleFragments =\n          currentSlide.querySelectorAll(\".fragment.visible\");\n\n        // This value represents how big a portion of the slide progress\n        // that is made up by its fragments (0-1)\n        let fragmentWeight = 0.9;\n\n        // Add fragment progress to the past slide count\n        pastCount +=\n          (visibleFragments.length / allFragments.length) * fragmentWeight;\n      }\n    }\n\n    return Math.min(pastCount / (totalCount - 1), 1);\n  }\n\n  /**\n   * Retrieves the h/v location and fragment of the current,\n   * or specified, slide.\n   *\n   * @param {HTMLElement} [slide] If specified, the returned\n   * index will be for this slide rather than the currently\n   * active one\n   *\n   * @return {{h: number, v: number, f: number}}\n   */\n  function getIndices(slide) {\n    // By default, return the current indices\n    let h = indexh,\n      v = indexv,\n      f;\n\n    // If a slide is specified, return the indices of that slide\n    if (slide) {\n      // In scroll mode the original h/x index is stored on the slide\n      if (scrollView.isActive()) {\n        h = parseInt(slide.getAttribute(\"data-index-h\"), 10);\n\n        if (slide.getAttribute(\"data-index-v\")) {\n          v = parseInt(slide.getAttribute(\"data-index-v\"), 10);\n        }\n      } else {\n        let isVertical = isVerticalSlide(slide);\n        let slideh = isVertical ? slide.parentNode : slide;\n\n        // Select all horizontal slides\n        let horizontalSlides = getHorizontalSlides();\n\n        // Now that we know which the horizontal slide is, get its index\n        h = Math.max(horizontalSlides.indexOf(slideh), 0);\n\n        // Assume we're not vertical\n        v = undefined;\n\n        // If this is a vertical slide, grab the vertical index\n        if (isVertical) {\n          v = Math.max(\n            Util.queryAll(slide.parentNode, \"section\").indexOf(slide),\n            0,\n          );\n        }\n      }\n    }\n\n    if (!slide && currentSlide) {\n      let hasFragments = currentSlide.querySelectorAll(\".fragment\").length > 0;\n      if (hasFragments) {\n        let currentFragment = currentSlide.querySelector(\".current-fragment\");\n        if (\n          currentFragment &&\n          currentFragment.hasAttribute(\"data-fragment-index\")\n        ) {\n          f = parseInt(currentFragment.getAttribute(\"data-fragment-index\"), 10);\n        } else {\n          f = currentSlide.querySelectorAll(\".fragment.visible\").length - 1;\n        }\n      }\n    }\n\n    return { h, v, f };\n  }\n\n  /**\n   * Retrieves all slides in this presentation.\n   */\n  function getSlides() {\n    return Util.queryAll(\n      dom.wrapper,\n      SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])',\n    );\n  }\n\n  /**\n   * Returns a list of all horizontal slides in the deck. Each\n   * vertical stack is included as one horizontal slide in the\n   * resulting array.\n   */\n  function getHorizontalSlides() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR);\n  }\n\n  /**\n   * Returns all vertical slides that exist within this deck.\n   */\n  function getVerticalSlides() {\n    return Util.queryAll(dom.wrapper, \".slides>section>section\");\n  }\n\n  /**\n   * Returns all vertical stacks (each stack can contain multiple slides).\n   */\n  function getVerticalStacks() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + \".stack\");\n  }\n\n  /**\n   * Returns true if there are at least two horizontal slides.\n   */\n  function hasHorizontalSlides() {\n    return getHorizontalSlides().length > 1;\n  }\n\n  /**\n   * Returns true if there are at least two vertical slides.\n   */\n  function hasVerticalSlides() {\n    return getVerticalSlides().length > 1;\n  }\n\n  /**\n   * Returns an array of objects where each object represents the\n   * attributes on its respective slide.\n   */\n  function getSlidesAttributes() {\n    return getSlides().map((slide) => {\n      let attributes = {};\n      for (let i = 0; i < slide.attributes.length; i++) {\n        let attribute = slide.attributes[i];\n        attributes[attribute.name] = attribute.value;\n      }\n      return attributes;\n    });\n  }\n\n  /**\n   * Retrieves the total number of slides in this presentation.\n   *\n   * @return {number}\n   */\n  function getTotalSlides() {\n    return getSlides().length;\n  }\n\n  /**\n   * Returns the slide element matching the specified index.\n   *\n   * @return {HTMLElement}\n   */\n  function getSlide(x, y) {\n    let horizontalSlide = getHorizontalSlides()[x];\n    let verticalSlides =\n      horizontalSlide && horizontalSlide.querySelectorAll(\"section\");\n\n    if (verticalSlides && verticalSlides.length && typeof y === \"number\") {\n      return verticalSlides ? verticalSlides[y] : undefined;\n    }\n\n    return horizontalSlide;\n  }\n\n  /**\n   * Returns the background element for the given slide.\n   * All slides, even the ones with no background properties\n   * defined, have a background element so as long as the\n   * index is valid an element will be returned.\n   *\n   * @param {mixed} x Horizontal background index OR a slide\n   * HTML element\n   * @param {number} y Vertical background index\n   * @return {(HTMLElement[]|*)}\n   */\n  function getSlideBackground(x, y) {\n    let slide = typeof x === \"number\" ? getSlide(x, y) : x;\n    if (slide) {\n      return slide.slideBackgroundElement;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Retrieves the current state of the presentation as\n   * an object. This state can then be restored at any\n   * time.\n   *\n   * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n   */\n  function getState() {\n    let indices = getIndices();\n\n    return {\n      indexh: indices.h,\n      indexv: indices.v,\n      indexf: indices.f,\n      paused: isPaused(),\n      overview: overview.isActive(),\n    };\n  }\n\n  /**\n   * Restores the presentation to the given state.\n   *\n   * @param {object} state As generated by getState()\n   * @see {@link getState} generates the parameter `state`\n   */\n  function setState(state) {\n    if (typeof state === \"object\") {\n      slide(\n        Util.deserialize(state.indexh),\n        Util.deserialize(state.indexv),\n        Util.deserialize(state.indexf),\n      );\n\n      let pausedFlag = Util.deserialize(state.paused),\n        overviewFlag = Util.deserialize(state.overview);\n\n      if (typeof pausedFlag === \"boolean\" && pausedFlag !== isPaused()) {\n        togglePause(pausedFlag);\n      }\n\n      if (\n        typeof overviewFlag === \"boolean\" &&\n        overviewFlag !== overview.isActive()\n      ) {\n        overview.toggle(overviewFlag);\n      }\n    }\n  }\n\n  /**\n   * Cues a new automated slide if enabled in the config.\n   */\n  function cueAutoSlide() {\n    cancelAutoSlide();\n\n    if (currentSlide && config.autoSlide !== false) {\n      let fragment = currentSlide.querySelector(\n        \".current-fragment[data-autoslide]\",\n      );\n\n      let fragmentAutoSlide = fragment\n        ? fragment.getAttribute(\"data-autoslide\")\n        : null;\n      let parentAutoSlide = currentSlide.parentNode\n        ? currentSlide.parentNode.getAttribute(\"data-autoslide\")\n        : null;\n      let slideAutoSlide = currentSlide.getAttribute(\"data-autoslide\");\n\n      // Pick value in the following priority order:\n      // 1. Current fragment's data-autoslide\n      // 2. Current slide's data-autoslide\n      // 3. Parent slide's data-autoslide\n      // 4. Global autoSlide setting\n      if (fragmentAutoSlide) {\n        autoSlide = parseInt(fragmentAutoSlide, 10);\n      } else if (slideAutoSlide) {\n        autoSlide = parseInt(slideAutoSlide, 10);\n      } else if (parentAutoSlide) {\n        autoSlide = parseInt(parentAutoSlide, 10);\n      } else {\n        autoSlide = config.autoSlide;\n\n        // If there are media elements with data-autoplay,\n        // automatically set the autoSlide duration to the\n        // length of that media. Not applicable if the slide\n        // is divided up into fragments.\n        // playbackRate is accounted for in the duration.\n        if (currentSlide.querySelectorAll(\".fragment\").length === 0) {\n          Util.queryAll(currentSlide, \"video, audio\").forEach((el) => {\n            if (el.hasAttribute(\"data-autoplay\")) {\n              if (\n                autoSlide &&\n                (el.duration * 1000) / el.playbackRate > autoSlide\n              ) {\n                autoSlide = (el.duration * 1000) / el.playbackRate + 1000;\n              }\n            }\n          });\n        }\n      }\n\n      // Cue the next auto-slide if:\n      // - There is an autoSlide value\n      // - Auto-sliding isn't paused by the user\n      // - The presentation isn't paused\n      // - The overview isn't active\n      // - The presentation isn't over\n      if (\n        autoSlide &&\n        !autoSlidePaused &&\n        !isPaused() &&\n        !overview.isActive() &&\n        (!isLastSlide() ||\n          fragments.availableRoutes().next ||\n          config.loop === true)\n      ) {\n        autoSlideTimeout = setTimeout(() => {\n          if (typeof config.autoSlideMethod === \"function\") {\n            config.autoSlideMethod();\n          } else {\n            navigateNext();\n          }\n          cueAutoSlide();\n        }, autoSlide);\n        autoSlideStartTime = Date.now();\n      }\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n      }\n    }\n  }\n\n  /**\n   * Cancels any ongoing request to auto-slide.\n   */\n  function cancelAutoSlide() {\n    clearTimeout(autoSlideTimeout);\n    autoSlideTimeout = -1;\n  }\n\n  function pauseAutoSlide() {\n    if (autoSlide && !autoSlidePaused) {\n      autoSlidePaused = true;\n      dispatchEvent({ type: \"autoslidepaused\" });\n      clearTimeout(autoSlideTimeout);\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(false);\n      }\n    }\n  }\n\n  function resumeAutoSlide() {\n    if (autoSlide && autoSlidePaused) {\n      autoSlidePaused = false;\n      dispatchEvent({ type: \"autoslideresumed\" });\n      cueAutoSlide();\n    }\n  }\n\n  function navigateLeft({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev();\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.next() === false) &&\n        availableRoutes().left\n      ) {\n        slide(\n          indexh + 1,\n          config.navigationMode === \"grid\" ? indexv : undefined,\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().left\n    ) {\n      slide(indexh - 1, config.navigationMode === \"grid\" ? indexv : undefined);\n    }\n  }\n\n  function navigateRight({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next();\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.prev() === false) &&\n        availableRoutes().right\n      ) {\n        slide(\n          indexh - 1,\n          config.navigationMode === \"grid\" ? indexv : undefined,\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().right\n    ) {\n      slide(indexh + 1, config.navigationMode === \"grid\" ? indexv : undefined);\n    }\n  }\n\n  function navigateUp({ skipFragments = false } = {}) {\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev();\n\n    // Prioritize hiding fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().up\n    ) {\n      slide(indexh, indexv - 1);\n    }\n  }\n\n  function navigateDown({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next();\n\n    // Prioritize revealing fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().down\n    ) {\n      slide(indexh, indexv + 1);\n    }\n  }\n\n  /**\n   * Navigates backwards, prioritized in the following order:\n   * 1) Previous fragment\n   * 2) Previous vertical slide\n   * 3) Previous horizontal slide\n   */\n  function navigatePrev({ skipFragments = false } = {}) {\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev();\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.prev() === false) {\n      if (availableRoutes().up) {\n        navigateUp({ skipFragments });\n      } else {\n        // Fetch the previous horizontal slide, if there is one\n        let previousSlide;\n\n        if (config.rtl) {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".future\",\n          ).pop();\n        } else {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".past\",\n          ).pop();\n        }\n\n        // When going backwards and arriving on a stack we start\n        // at the bottom of the stack\n        if (previousSlide && previousSlide.classList.contains(\"stack\")) {\n          let v =\n            previousSlide.querySelectorAll(\"section\").length - 1 || undefined;\n          let h = indexh - 1;\n          slide(h, v);\n        } else if (config.rtl) {\n          navigateRight({ skipFragments });\n        } else {\n          navigateLeft({ skipFragments });\n        }\n      }\n    }\n  }\n\n  /**\n   * The reverse of #navigatePrev().\n   */\n  function navigateNext({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next();\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.next() === false) {\n      let routes = availableRoutes();\n\n      // When looping is enabled `routes.down` is always available\n      // so we need a separate check for when we've reached the\n      // end of a stack and should move horizontally\n      if (routes.down && routes.right && config.loop && isLastVerticalSlide()) {\n        routes.down = false;\n      }\n\n      if (routes.down) {\n        navigateDown({ skipFragments });\n      } else if (config.rtl) {\n        navigateLeft({ skipFragments });\n      } else {\n        navigateRight({ skipFragments });\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ----------------------------- EVENTS -------------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Called by all event handlers that are based on user\n   * input.\n   *\n   * @param {object} [event]\n   */\n  function onUserInput(event) {\n    if (config.autoSlideStoppable) {\n      pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Listener for post message events posted to this window.\n   */\n  function onPostMessage(event) {\n    let data = event.data;\n\n    // Make sure we're dealing with JSON\n    if (\n      typeof data === \"string\" &&\n      data.charAt(0) === \"{\" &&\n      data.charAt(data.length - 1) === \"}\"\n    ) {\n      data = JSON.parse(data);\n\n      // Check if the requested method can be found\n      if (data.method && typeof Reveal[data.method] === \"function\") {\n        if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n          const result = Reveal[data.method].apply(Reveal, data.args);\n\n          // Dispatch a postMessage event with the returned value from\n          // our method invocation for getter functions\n          dispatchPostMessage(\"callback\", {\n            method: data.method,\n            result: result,\n          });\n        } else {\n          console.warn(\n            'reveal.js: \"' +\n              data.method +\n              '\" is is blacklisted from the postMessage API',\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Event listener for transition end on the current slide.\n   *\n   * @param {object} [event]\n   */\n  function onTransitionEnd(event) {\n    if (transition === \"running\" && /section/gi.test(event.target.nodeName)) {\n      transition = \"idle\";\n      dispatchEvent({\n        type: \"slidetransitionend\",\n        data: { indexh, indexv, previousSlide, currentSlide },\n      });\n    }\n  }\n\n  /**\n   * A global listener for all click events inside of the\n   * .slides container.\n   *\n   * @param {object} [event]\n   */\n  function onSlidesClicked(event) {\n    const anchor = Util.closest(event.target, 'a[href^=\"#\"]');\n\n    // If a hash link is clicked, we find the target slide\n    // and navigate to it. We previously relied on 'hashchange'\n    // for links like these but that prevented media with\n    // audio tracks from playing in mobile browsers since it\n    // wasn't considered a direct interaction with the document.\n    if (anchor) {\n      const hash = anchor.getAttribute(\"href\");\n      const indices = location.getIndicesFromHash(hash);\n\n      if (indices) {\n        Reveal.slide(indices.h, indices.v, indices.f);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handler for the window level 'resize' event.\n   *\n   * @param {object} [event]\n   */\n  function onWindowResize(event) {\n    layout();\n  }\n\n  /**\n   * Handle for the window level 'visibilitychange' event.\n   *\n   * @param {object} [event]\n   */\n  function onPageVisibilityChange(event) {\n    // If, after clicking a link or similar and we're coming back,\n    // focus the document.body to ensure we can use keyboard shortcuts\n    if (document.hidden === false && document.activeElement !== document.body) {\n      // Not all elements support .blur() - SVGs among them.\n      if (typeof document.activeElement.blur === \"function\") {\n        document.activeElement.blur();\n      }\n      document.body.focus();\n    }\n  }\n\n  /**\n   * Handler for the document level 'fullscreenchange' event.\n   *\n   * @param {object} [event]\n   */\n  function onFullscreenChange(event) {\n    let element =\n      document.fullscreenElement || document.webkitFullscreenElement;\n    if (element === dom.wrapper) {\n      event.stopImmediatePropagation();\n\n      // Timeout to avoid layout shift in Safari\n      setTimeout(() => {\n        Reveal.layout();\n        Reveal.focus.focus(); // focus.focus :'(\n      }, 1);\n    }\n  }\n\n  /**\n   * Handles clicks on links that are set to preview in the\n   * iframe overlay.\n   *\n   * @param {object} event\n   */\n  function onPreviewLinkClicked(event) {\n    if (event.currentTarget && event.currentTarget.hasAttribute(\"href\")) {\n      let url = event.currentTarget.getAttribute(\"href\");\n      if (url) {\n        showPreview(url);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handles click on the auto-sliding controls element.\n   *\n   * @param {object} [event]\n   */\n  function onAutoSlidePlayerClick(event) {\n    // Replay\n    if (isLastSlide() && config.loop === false) {\n      slide(0, 0);\n      resumeAutoSlide();\n    }\n    // Resume\n    else if (autoSlidePaused) {\n      resumeAutoSlide();\n    }\n    // Pause\n    else {\n      pauseAutoSlide();\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ------------------------------- API --------------------------------//\n  // --------------------------------------------------------------------//\n\n  // The public reveal.js API\n  const API = {\n    VERSION,\n\n    initialize,\n    configure,\n    destroy,\n\n    sync,\n    syncSlide,\n    syncFragments: fragments.sync.bind(fragments),\n\n    // Navigation methods\n    slide,\n    left: navigateLeft,\n    right: navigateRight,\n    up: navigateUp,\n    down: navigateDown,\n    prev: navigatePrev,\n    next: navigateNext,\n\n    // Navigation aliases\n    navigateLeft,\n    navigateRight,\n    navigateUp,\n    navigateDown,\n    navigatePrev,\n    navigateNext,\n\n    // Fragment methods\n    navigateFragment: fragments.goto.bind(fragments),\n    prevFragment: fragments.prev.bind(fragments),\n    nextFragment: fragments.next.bind(fragments),\n\n    // Event binding\n    on,\n    off,\n\n    // Legacy event binding methods left in for backwards compatibility\n    addEventListener: on,\n    removeEventListener: off,\n\n    // Forces an update in slide layout\n    layout,\n\n    // Randomizes the order of slides\n    shuffle,\n\n    // Returns an object with the available routes as booleans (left/right/top/bottom)\n    availableRoutes,\n\n    // Returns an object with the available fragments as booleans (prev/next)\n    availableFragments: fragments.availableRoutes.bind(fragments),\n\n    // Toggles a help overlay with keyboard shortcuts\n    toggleHelp,\n\n    // Toggles the overview mode on/off\n    toggleOverview: overview.toggle.bind(overview),\n\n    // Toggles the scroll view on/off\n    toggleScrollView: scrollView.toggle.bind(scrollView),\n\n    // Toggles the \"black screen\" mode on/off\n    togglePause,\n\n    // Toggles the auto slide mode on/off\n    toggleAutoSlide,\n\n    // Toggles visibility of the jump-to-slide UI\n    toggleJumpToSlide,\n\n    // Slide navigation checks\n    isFirstSlide,\n    isLastSlide,\n    isLastVerticalSlide,\n    isVerticalSlide,\n    isVerticalStack,\n\n    // State checks\n    isPaused,\n    isAutoSliding,\n    isSpeakerNotes: notes.isSpeakerNotesWindow.bind(notes),\n    isOverview: overview.isActive.bind(overview),\n    isFocused: focus.isFocused.bind(focus),\n\n    isScrollView: scrollView.isActive.bind(scrollView),\n    isPrintView: printView.isActive.bind(printView),\n\n    // Checks if reveal.js has been loaded and is ready for use\n    isReady: () => ready,\n\n    // Slide preloading\n    loadSlide: slideContent.load.bind(slideContent),\n    unloadSlide: slideContent.unload.bind(slideContent),\n\n    // Start/stop all media inside of the current slide\n    startEmbeddedContent: () => slideContent.startEmbeddedContent(currentSlide),\n    stopEmbeddedContent: () =>\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false }),\n\n    // Preview management\n    showPreview,\n    hidePreview: closeOverlay,\n\n    // Adds or removes all internal event listeners\n    addEventListeners,\n    removeEventListeners,\n    dispatchEvent,\n\n    // Facility for persisting and restoring the presentation state\n    getState,\n    setState,\n\n    // Presentation progress on range of 0-1\n    getProgress,\n\n    // Returns the indices of the current, or specified, slide\n    getIndices,\n\n    // Returns an Array of key:value maps of the attributes of each\n    // slide in the deck\n    getSlidesAttributes,\n\n    // Returns the number of slides that we have passed\n    getSlidePastCount,\n\n    // Returns the total number of slides\n    getTotalSlides,\n\n    // Returns the slide element at the specified index\n    getSlide,\n\n    // Returns the previous slide element, may be null\n    getPreviousSlide: () => previousSlide,\n\n    // Returns the current slide element\n    getCurrentSlide: () => currentSlide,\n\n    // Returns the slide background element at the specified index\n    getSlideBackground,\n\n    // Returns the speaker notes string for a slide, or null\n    getSlideNotes: notes.getSlideNotes.bind(notes),\n\n    // Returns an Array of all slides\n    getSlides,\n\n    // Returns an array with all horizontal/vertical slides in the deck\n    getHorizontalSlides,\n    getVerticalSlides,\n\n    // Checks if the presentation contains two or more horizontal\n    // and vertical slides\n    hasHorizontalSlides,\n    hasVerticalSlides,\n\n    // Checks if the deck has navigated on either axis at least once\n    hasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n    hasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n    shouldAutoAnimateBetween,\n\n    // Adds/removes a custom key binding\n    addKeyBinding: keyboard.addKeyBinding.bind(keyboard),\n    removeKeyBinding: keyboard.removeKeyBinding.bind(keyboard),\n\n    // Programmatically triggers a keyboard event\n    triggerKey: keyboard.triggerKey.bind(keyboard),\n\n    // Registers a new shortcut to include in the help overlay\n    registerKeyboardShortcut: keyboard.registerKeyboardShortcut.bind(keyboard),\n\n    getComputedSlideSize,\n    setCurrentScrollPage,\n\n    // Returns the current scale of the presentation content\n    getScale: () => scale,\n\n    // Returns the current configuration object\n    getConfig: () => config,\n\n    // Helper method, retrieves query string as a key:value map\n    getQueryHash: Util.getQueryHash,\n\n    // Returns the path to the current slide as represented in the URL\n    getSlidePath: location.getHash.bind(location),\n\n    // Returns reveal.js DOM elements\n    getRevealElement: () => revealElement,\n    getSlidesElement: () => dom.slides,\n    getViewportElement: () => dom.viewport,\n    getBackgroundsElement: () => backgrounds.element,\n\n    // API for registering and retrieving plugins\n    registerPlugin: plugins.registerPlugin.bind(plugins),\n    hasPlugin: plugins.hasPlugin.bind(plugins),\n    getPlugin: plugins.getPlugin.bind(plugins),\n    getPlugins: plugins.getRegisteredPlugins.bind(plugins),\n  };\n\n  // Our internal API which controllers have access to\n  Util.extend(Reveal, {\n    ...API,\n\n    // Methods for announcing content to screen readers\n    announceStatus,\n    getStatusText,\n\n    // Controllers\n    focus,\n    scroll: scrollView,\n    progress,\n    controls,\n    location,\n    overview,\n    fragments,\n    backgrounds,\n    slideContent,\n    slideNumber,\n\n    onUserInput,\n    closeOverlay,\n    updateSlidesVisibility,\n    layoutSlideContents,\n    transformSlides,\n    cueAutoSlide,\n    cancelAutoSlide,\n  });\n\n  return API;\n}\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","enterFullscreen","requestMethod","document","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","apply","createStyleSheet","tag","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","arguments","sync","cancelAnimationFrame","n","s","filter","dirty","active","requestAnimationFrame","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","video","isSpeakerNotes","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","isSpeakerNotesWindow","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","paused","ended","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","previousBackgroundHash","currentBackgroundHash","currentVideo","previousVideo","currentVideoParent","slideContent","currentBackgroundContent","backgroundImageURL","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","includes","togglePause","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","onEnterFullscreen","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsFullscreen","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","hasVerticalSiblings","parentElement","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","viewport","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","initialized","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}